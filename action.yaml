---
name: actions-release-ui-components
description: |
  Releases the UI Components package to NPM and GitHub.
inputs:
  NPM_TOKEN:
    description: "The NPM token to use for publishing the package."
    required: true
  GITHUB_TOKEN:
    description: "The Github token to use for creating the release."
    required: true
  NEBULA_UI_ACTIONS_RW_TOKEN:
    description: "The Github token to use for triggering the Nebula UI NPM package update."
    required: true
  PREFECT_OSS_ACTIONS_RW_TOKEN:
    description: "The Github token to use for triggering the Prefect OSS NPM package update."
    required: true
runs:
  using: composite
  steps:
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version-file: ".nvmrc"

    - name: Install Dependencies
      run: npm ci
      shell: bash

    - name: Build Package
      run: npm run build
      shell: bash

    - name: Publish Package to NPM
      id: publish
      uses: JS-DevTools/npm-publish@v2
      with:
        token: ${{ inputs.NPM_TOKEN }}
        strategy: upgrade
        access: public

    - name: Create Release
      env:
        GH_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        tag: ${{ steps.publish.outputs.version }}
      run: |
        gh release create "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            --title="Release ${tag#v}" \
            --generate-notes
      shell: bash

    - name: Trigger Nebula UI NPM Package Update
      env:
        GITHUB_TOKEN: ${{ inputs.NEBULA_UI_ACTIONS_RW_TOKEN }}
      run: |
        gh workflow run npm_update_latest_prefect.yaml \
            --repo=nebula-ui \
            --ref=main \
            -f package_name="$GITHUB_REPOSITORY" \
            -f package_version="$tag"
      shell: bash

    - name: Trigger Prefect OSS NPM Package Update
      env:
        GITHUB_TOKEN: ${{ inputs.PREFECT_OSS_ACTIONS_RW_TOKEN }}
      run: |
        gh workflow run npm_update_latest_prefect.yaml \
            --repo=prefect \
            --ref=main \
            -f package_name="$GITHUB_REPOSITORY" \
            -f package_version="$tag"
      shell: bash
